// pages/_app.js
import "@/styles/globals.css";
import React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { AppCacheProvider } from "@mui/material-nextjs/v13-pagesRouter";
import { ThemeProvider, createTheme } from "@mui/material/styles";
import { Roboto } from "next/font/google";
import {
  AppBar,
  Toolbar,
  Button,
  Box,
  Container,
  Menu,
  MenuItem,
  ListItemIcon,
  Divider,
} from "@mui/material";

import CalculateIcon from "@mui/icons-material/Calculate";
import BarChartIcon from "@mui/icons-material/BarChart";
import CompareArrowsIcon from "@mui/icons-material/CompareArrows";
import DashboardIcon from "@mui/icons-material/Dashboard";
import AccountCircleIcon from "@mui/icons-material/AccountCircle";
import LogoutIcon from "@mui/icons-material/Logout";

import useBearStore from "@/store/useBearStore";

const roboto = Roboto({
  weight: ["300", "400", "500", "700"],
  subsets: ["latin"],
  display: "swap",
});

const theme = createTheme({
  palette: {},
  typography: {
    fontFamily: roboto.style.fontFamily,
  },
});

// -------- Layout with optional header + Account menu --------
function Layout({ children, showHeader = true }) {
  const router = useRouter();
  const [acctEl, setAcctEl] = React.useState(null);
  const acctOpen = Boolean(acctEl);

  const openAccountMenu = (e) => setAcctEl(e.currentTarget);
  const closeAccountMenu = () => setAcctEl(null);

  const handleLogout = () => {
    // Clear client-side auth (customize keys to match your app)
    try {
      if (typeof window !== "undefined") {
        localStorage.removeItem("authToken");
        localStorage.removeItem("user");
        sessionStorage.removeItem("authToken");
      }
    } catch {}
    closeAccountMenu();
    router.push("/"); // go to index after logout
  };

  return (
    <Box sx={{ minHeight: "100vh" }}>
      {showHeader && (
        <AppBar position="static" color="transparent" elevation={1}>
          <Toolbar sx={{ display: "flex", justifyContent: "space-around" }}>
            <Button startIcon={<CalculateIcon />} onClick={() => router.push("/calculator")}>
              Calculator
            </Button>
            <Button startIcon={<BarChartIcon />} onClick={() => router.push("/portfolio")}>
              Portfolio
            </Button>
            <Button startIcon={<CompareArrowsIcon />} onClick={() => router.push("/transaction")}>
              Transaction
            </Button>
            <Button startIcon={<DashboardIcon />} onClick={() => router.push("/dashboard")}>
              Dashboard
            </Button>

            {/* Account button opens a small menu with Logout */}
            <Button
              startIcon={<AccountCircleIcon />}
              onClick={openAccountMenu}
              aria-controls={acctOpen ? "account-menu" : undefined}
              aria-haspopup="true"
              aria-expanded={acctOpen ? "true" : undefined}
            >
              Account
            </Button>

            <Menu
              id="account-menu"
              anchorEl={acctEl}
              open={acctOpen}
              onClose={closeAccountMenu}
              anchorOrigin={{ vertical: "bottom", horizontal: "right" }}
              transformOrigin={{ vertical: "top", horizontal: "right" }}
            >
              {/* If you later want Profile/Settings, add them above the divider */}
              {/* <MenuItem onClick={()=>{ closeAccountMenu(); router.push('/profile'); }}>Profile</MenuItem>
              <Divider /> */}
              <MenuItem onClick={handleLogout}>
                <ListItemIcon>
                  <LogoutIcon fontSize="small" />
                </ListItemIcon>
                Logout
              </MenuItem>
            </Menu>
          </Toolbar>
        </AppBar>
      )}

      {/* Page content always wrapped in container */}
      <Container sx={{ py: 3 }}>{children}</Container>
    </Box>
  );
}

// -------- Your App component --------
export default function App({ Component, pageProps, props }) {
  const router = useRouter();
  const [loading, setLoading] = React.useState(false);
  const setAppName = useBearStore((state) => state.setAppName);
  const pageName = router.pathname;

  React.useEffect(() => {
    setLoading(true);
    setAppName("Say Hi");
    setLoading(false);
  }, [router, pageName, setAppName]);

  // Hide header on these routes
  const noHeaderPages = ["/", "/login", "/register"];
  const showHeader = !noHeaderPages.includes(router.pathname);

  return (
    <React.Fragment>
      <Head>
        <title>Application</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppCacheProvider {...props}>
        <ThemeProvider theme={theme}>
          <Layout showHeader={showHeader}>
            <Component {...pageProps} />
          </Layout>
        </ThemeProvider>
      </AppCacheProvider>
    </React.Fragment>
  );
}
  